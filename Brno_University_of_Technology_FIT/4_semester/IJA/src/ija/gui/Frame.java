/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ija.gui;

import ija.gui.SaveManagement;
import ija.ija2015.homework2.board.*;
import ija.ija2015.homework2.game.*;
import ija.Reversi;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import static java.time.Clock.system;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Deque;
import java.util.List;
import java.util.Random;
import java.util.Set;
import java.util.Stack;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;

/**
 *
 * @author Andrea
 */
public class Frame extends javax.swing.JFrame implements Serializable {

	int dRow, dCol;
	int saveLoad; //load = 1, save = 2, nothing = 0
	int countPlayers = 0;
	int size = 0;
	private ReversiRules rules;
	private Board board;
	JLayeredPane[][] panelHolder;
	private Game game;
	Player player1 = null;
	Player player2 = null;
	String adr;
	File image;
	int positionX, positionY;
	int algorithm = 0;
	int actualPosX, actualPosY;
	Boolean actualPlayer;
	Boolean end = false;
	Boolean stonePlaced = false;
	Boolean undoDone = false;
	Integer ID;
    Boolean permanentDefrost = false;
	int b, i ,c;
	
	/*Images*/
	BufferedImage TitleBoard;
	BufferedImage Background;
	BufferedImage Border;
	BufferedImage SmileyW;
	BufferedImage SmileyB;
	BufferedImage StoneW;
	BufferedImage StoneB;
	BufferedImage Highlight;
	BufferedImage Logo;
	BufferedImage SmallStoneW;
	BufferedImage SmallStoneB;
	BufferedImage Frozen;
	
	
	
	/**
	 * Creates new form Frame
	 * If it is new thread from load, then board is loaded
         * @param game is a new game
	 */
	public Frame(Game game) {
		this.game = game;
		initComponents();
		this.ID = (int)(Math.random() * 50 + 1);
		if(this.game != null){
			loadBoard(this.game);
			jButton8.setVisible(true);
			this.board = this.game.getBoard();
			jLabel5.setText("Game load. You can play "+ this.game.currentPlayer().getName() + "!");
			jTextField3.setVisible(false);
			jButton7.setVisible(false);
		
		}
		
		this.setVisible(true);
		
		
		 while (! this.end) {try {
            Thread.sleep(1234);
            } catch (InterruptedException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jDialog1 = new javax.swing.JDialog();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton8 = new javax.swing.JRadioButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jOptionPane1 = new javax.swing.JOptionPane();
        jDialog2 = new javax.swing.JDialog();
        jLabel14 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jDialog4 = new javax.swing.JDialog();
        jLabel16 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton14 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jFileChooser1 = new javax.swing.JFileChooser();
        jDialog5 = new javax.swing.JDialog();
        jLabel18 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jButton15 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();

        jDialog1.setMinimumSize(new java.awt.Dimension(400, 500));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Start Game");
        jButton2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 204, 0)));
        jButton2.setMaximumSize(new java.awt.Dimension(250, 35));
        jButton2.setMinimumSize(new java.awt.Dimension(250, 35));
        jButton2.setPreferredSize(new java.awt.Dimension(250, 35));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Choose Board Size");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("6x6");
        jRadioButton1.setToolTipText("");
        jRadioButton1.setMaximumSize(new java.awt.Dimension(70, 23));
        jRadioButton1.setMinimumSize(new java.awt.Dimension(70, 23));
        jRadioButton1.setPreferredSize(new java.awt.Dimension(70, 23));

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setSelected(true);
        jRadioButton2.setText("8x8");
        jRadioButton2.setMaximumSize(new java.awt.Dimension(70, 23));
        jRadioButton2.setMinimumSize(new java.awt.Dimension(70, 23));
        jRadioButton2.setPreferredSize(new java.awt.Dimension(70, 23));

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("10x10");
        jRadioButton3.setMaximumSize(new java.awt.Dimension(70, 23));
        jRadioButton3.setMinimumSize(new java.awt.Dimension(70, 23));
        jRadioButton3.setPreferredSize(new java.awt.Dimension(70, 23));

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setText("12x12");
        jRadioButton4.setMaximumSize(new java.awt.Dimension(70, 23));
        jRadioButton4.setMinimumSize(new java.awt.Dimension(70, 23));
        jRadioButton4.setPreferredSize(new java.awt.Dimension(70, 23));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Choose Oponent");

        buttonGroup2.add(jRadioButton5);
        jRadioButton5.setText("Computer");
        jRadioButton5.setMaximumSize(new java.awt.Dimension(140, 23));
        jRadioButton5.setMinimumSize(new java.awt.Dimension(140, 23));
        jRadioButton5.setPreferredSize(new java.awt.Dimension(140, 23));
        jRadioButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton5MouseClicked(evt);
            }
        });

        buttonGroup2.add(jRadioButton6);
        jRadioButton6.setSelected(true);
        jRadioButton6.setText("Person");
        jRadioButton6.setMaximumSize(new java.awt.Dimension(140, 23));
        jRadioButton6.setMinimumSize(new java.awt.Dimension(140, 23));
        jRadioButton6.setPreferredSize(new java.awt.Dimension(140, 23));
        jRadioButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton6MouseClicked(evt);
            }
        });

        jToggleButton1.setText("Freeze Buttons");
        jToggleButton1.setMaximumSize(new java.awt.Dimension(120, 30));
        jToggleButton1.setMinimumSize(new java.awt.Dimension(120, 30));
        jToggleButton1.setPreferredSize(new java.awt.Dimension(120, 30));
        jToggleButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButton1MouseClicked(evt);
            }
        });

        jButton3.setText("Add Player");
        jButton3.setMaximumSize(new java.awt.Dimension(120, 30));
        jButton3.setMinimumSize(new java.awt.Dimension(120, 30));
        jButton3.setPreferredSize(new java.awt.Dimension(120, 30));
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Please Select Options!");

        jTextField2.setText("Player Name..");
        jTextField2.setMaximumSize(new java.awt.Dimension(100, 23));
        jTextField2.setMinimumSize(new java.awt.Dimension(100, 23));
        jTextField2.setPreferredSize(new java.awt.Dimension(100, 23));
        jTextField2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField2MouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("REVERSI");

        jRadioButton7.setVisible(false);
        buttonGroup3.add(jRadioButton7);
        jRadioButton7.setText("Algoritmus 1");

        jRadioButton8.setVisible(false);
        buttonGroup3.add(jRadioButton8);
        jRadioButton8.setText("Algoritmus 2");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel1))
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jRadioButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jRadioButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel2))
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jRadioButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jRadioButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(jRadioButton7)
                .addGap(15, 15, 15)
                .addComponent(jRadioButton8))
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(2, 2, 2)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton7)
                    .addComponent(jRadioButton8))
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jDialog2.setMinimumSize(new java.awt.Dimension(400, 200));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Are you sure you wan to end game?");

        jButton9.setText("YES");
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton9MouseClicked(evt);
            }
        });

        jButton10.setText("NO");
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton10MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog2Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDialog2Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jDialog4.setLocationByPlatform(true);
        jDialog4.setMinimumSize(new java.awt.Dimension(400, 300));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Please choose from already saved files!");

        jTextField4.setText("Name of file..");
        jTextField4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField4MouseClicked(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jButton14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton14.setText("LOAD");
        jButton14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton14MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jDialog4Layout = new javax.swing.GroupLayout(jDialog4.getContentPane());
        jDialog4.getContentPane().setLayout(jDialog4Layout);
        jDialog4Layout.setHorizontalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jDialog4Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jDialog4Layout.setVerticalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog4Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jDialog4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jLabel17.setText("jLabel17");

        jDialog5.setMaximumSize(new java.awt.Dimension(400, 300));
        jDialog5.setMinimumSize(new java.awt.Dimension(400, 300));
        jDialog5.setPreferredSize(new java.awt.Dimension(400, 300));
        jDialog5.setResizable(false);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Please add intervals and count of stones. Press OK!");

        jTextField5.setText("Interval B..");
        jTextField5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField5MouseClicked(evt);
            }
        });

        jTextField6.setText("Interval I..");
        jTextField6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField6MouseClicked(evt);
            }
        });

        jTextField7.setText("Count of stones..");
        jTextField7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField7MouseClicked(evt);
            }
        });

        jButton15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton15.setText("OK");
        jButton15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton15MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jDialog5Layout = new javax.swing.GroupLayout(jDialog5.getContentPane());
        jDialog5.getContentPane().setLayout(jDialog5Layout);
        jDialog5Layout.setHorizontalGroup(
            jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog5Layout.createSequentialGroup()
                .addGap(0, 28, Short.MAX_VALUE)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(jDialog5Layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addGroup(jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField7, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        jDialog5Layout.setVerticalGroup(
            jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(900, 750));
        setMinimumSize(new java.awt.Dimension(900, 750));
        setPreferredSize(new java.awt.Dimension(900, 750));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Welcome in REVERSI!");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setVisible(false);
        jLabel6.setText("Krásny obrážťok");
        jLabel6.setMaximumSize(new java.awt.Dimension(120, 120));
        jLabel6.setMinimumSize(new java.awt.Dimension(120, 120));
        jLabel6.setPreferredSize(new java.awt.Dimension(120, 120));

        jLabel9.setText("Black");
        jLabel9.setVisible(false);
        jLabel9.setMaximumSize(new java.awt.Dimension(30, 30));
        jLabel9.setMinimumSize(new java.awt.Dimension(30, 30));
        jLabel9.setPreferredSize(new java.awt.Dimension(30, 30));

        jLabel8.setText("White");
        jLabel8.setVisible(false);
        jLabel8.setMaximumSize(new java.awt.Dimension(30, 30));
        jLabel8.setMinimumSize(new java.awt.Dimension(30, 30));
        jLabel8.setPreferredSize(new java.awt.Dimension(30, 30));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setVisible(false);
        jLabel10.setText("Name 1");
        jLabel10.setMaximumSize(new java.awt.Dimension(100, 23));
        jLabel10.setMinimumSize(new java.awt.Dimension(100, 23));
        jLabel10.setPreferredSize(new java.awt.Dimension(100, 23));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setVisible(false);
        jLabel11.setText("Score 1");
        jLabel11.setMaximumSize(new java.awt.Dimension(100, 23));
        jLabel11.setMinimumSize(new java.awt.Dimension(100, 23));
        jLabel11.setPreferredSize(new java.awt.Dimension(100, 23));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setVisible(false);
        jLabel12.setText("Name 2");
        jLabel12.setMaximumSize(new java.awt.Dimension(100, 23));
        jLabel12.setMinimumSize(new java.awt.Dimension(100, 23));
        jLabel12.setPreferredSize(new java.awt.Dimension(100, 23));

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Score 2");
        jLabel13.setVisible(false);
        jLabel13.setMaximumSize(new java.awt.Dimension(100, 23));
        jLabel13.setMinimumSize(new java.awt.Dimension(100, 23));
        jLabel13.setPreferredSize(new java.awt.Dimension(100, 23));

        jPanel3.setMaximumSize(new java.awt.Dimension(300, 50));
        jPanel3.setMinimumSize(new java.awt.Dimension(300, 50));
        jPanel3.setPreferredSize(new java.awt.Dimension(300, 50));
        jPanel3.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jPanel3PropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jButton1.setText("New Game");
        jButton1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 204, 0)));
        jButton1.setMaximumSize(new java.awt.Dimension(120, 35));
        jButton1.setMinimumSize(new java.awt.Dimension(120, 35));
        jButton1.setPreferredSize(new java.awt.Dimension(120, 35));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton4.setText("End Game");
        jButton4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 204, 0)));
        jButton4.setMaximumSize(new java.awt.Dimension(120, 35));
        jButton4.setMinimumSize(new java.awt.Dimension(120, 35));
        jButton4.setPreferredSize(new java.awt.Dimension(120, 35));
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jButton5.setText("Save Game");
        jButton5.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 204, 0)));
        jButton5.setMaximumSize(new java.awt.Dimension(120, 35));
        jButton5.setMinimumSize(new java.awt.Dimension(120, 35));
        jButton5.setPreferredSize(new java.awt.Dimension(120, 35));
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        jButton6.setText("Load Game");
        jButton6.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 204, 0)));
        jButton6.setMaximumSize(new java.awt.Dimension(120, 35));
        jButton6.setMinimumSize(new java.awt.Dimension(120, 35));
        jButton6.setPreferredSize(new java.awt.Dimension(120, 35));
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 24, 0));
        jPanel1.setMaximumSize(new java.awt.Dimension(560, 560));
        jPanel1.setMinimumSize(new java.awt.Dimension(560, 560));
        jPanel1.setPreferredSize(new java.awt.Dimension(560, 560));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(240, 20, 240));
        jPanel2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jPanel2PropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 560, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 560, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setVisible(false);
        jLabel7.setText("ON TURN");

        jTextField3.setText("Name of file..");
        jTextField3.setVisible(false);
        jTextField3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField3MouseClicked(evt);
            }
        });

        jButton7.setText("OK");
        jButton7.setVisible(false);
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });

        jButton8.setText("Undo");
        jButton8.setVisible(false);
        jButton8.setMaximumSize(new java.awt.Dimension(120, 30));
        jButton8.setMinimumSize(new java.awt.Dimension(120, 30));
        jButton8.setPreferredSize(new java.awt.Dimension(120, 30));
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });

        jButton13.setVisible(false);
        jButton13.setText("DONE");
        jButton13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton13MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(630, 630, 630)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jButton7))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel5)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addComponent(jLabel7)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	
	/**
	* Pressed New Game
	* If game in current frame is not open, it will be open in this frame
	* Else new thread is created
	*/
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
       if (this.countPlayers == 0){
		   jDialog1.setVisible(true);
	   }
	   else{
			Reversi R = new Reversi();
			Thread t = new Thread(R);
			t.start();
	   }
	     
		  
    }//GEN-LAST:event_jButton1MouseClicked

	
	/**
	 * Start Game clicked
	 * If some option is not selected or added the warning is printed
	 * Else game is loaded and variables are set
	 */
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
       if(this.countPlayers<1){
		   if(jRadioButton5.isSelected()) jLabel3.setText("Please add 1 Player!");
		   else jLabel3.setText("Please add 2 Players!");
		   
		   return;
	   }
	   
	   if(this.countPlayers==1 && jRadioButton6.isSelected()){
		   jLabel3.setText("Please add 1 Player!");
		   
		   return;
	   }
	   
	   if(jRadioButton5.isSelected() && this.algorithm == 0){
		   if(jRadioButton7.isSelected()){
			   this.algorithm = 1;
		   
		   }
		   else if (jRadioButton8.isSelected()){
			   this.algorithm = 2;
		   }
		   else {
			  
			   jLabel3.setText("Please select algorithm!");
			   return;
		   
		   }
		  
	   }
	   
	   jDialog1.setVisible(false);
	   
	   if(jRadioButton5.isSelected()){
		   
		   jLabel12.setText("Computer");
		   jLabel13.setText("2");
		   this.player2 = new Player(false, "Computer");
		   this.image = new File("../lib/reversi/smallstoneb.png");
				try {
					this.SmallStoneB = ImageIO.read(this.image);
				} catch (IOException ex) {
					Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
				}
		   JLabel imageH = new JLabel(new ImageIcon(this.SmallStoneB));
		   imageH.setBounds(0,0,30,30);
		   jLabel9.setText("");
		   jLabel9.add(imageH);
		   jLabel9.repaint();
		   jLabel9.revalidate();
	   }
	   
	    
	  jPanel2.removeAll();
	  jPanel2.setVisible(false);
	  this.initializeBoard();
	  this.game = new Game(this.board);
	  this.game.addPlayer(this.player1);  // white - true
      this.game.addPlayer(this.player2);  // black - false (or AI)
      
	  // nulling count of stones
      this.game.player1.setDiskNum();
      this.game.player2.setDiskNum();
	  
	  jButton8.setVisible(true);
	  jLabel8.setVisible(true);
	  jLabel9.setVisible(true);
	  jLabel10.setVisible(true);
	  jLabel11.setVisible(true);
	  jLabel12.setVisible(true);
	  jLabel13.setVisible(true);
	  
	  
	  /*Inserting first stones to board*/
	  insertIcon(this.StoneW, this.size/2, this.size/2,0);
      jPanel1.add(this.panelHolder[this.size/2][this.size/2]);
      this.panelHolder[this.size/2][this.size/2].revalidate();
      this.panelHolder[this.size/2][this.size/2].repaint();

	  insertIcon(this.StoneW, this.size/2+1, this.size/2+1,0);
      jPanel1.add(this.panelHolder[this.size/2+1][this.size/2+1]);
      this.panelHolder[this.size/2+1][this.size/2+1].revalidate();
      this.panelHolder[this.size/2+1][this.size/2+1].repaint();
	  
	  insertIcon(this.StoneB, (this.size/2) + 1, this.size/2,0);
      jPanel1.add(this.panelHolder[this.size/2+1][this.size/2]);
      this.panelHolder[this.size/2+1][this.size/2].revalidate();
      this.panelHolder[this.size/2+1][this.size/2].repaint();
		
	  insertIcon(this.StoneB, this.size/2, (this.size/2) + 1,0);
	  jPanel1.add(this.panelHolder[this.size/2][this.size/2+1]);
      this.panelHolder[this.size/2][this.size/2+1].revalidate();
      this.panelHolder[this.size/2][this.size/2+1].repaint();
		 
	  jPanel1.revalidate();
  	  jPanel1.repaint();
	  
	  jLabel5.setText("");
	  jLabel5.setText("It's your turn " + game.currentPlayer().getName() + "!");
	  
	  jLabel7.setVisible(true);
	  jLabel6.setVisible(true);
	  jLabel6.removeAll();
	  jLabel6.setText("");
	  JLabel image2 = new JLabel(new ImageIcon(this.SmileyW));
      image2.setBounds(0,0,120,120);
	  jLabel6.setVisible(true);
	  jLabel6.add(image2);
	  jLabel6.repaint();
	  jLabel6.revalidate();
	  
	 // possPutDisk();
	  
          /* frozen */
       if (jToggleButton1.isSelected()) {
          
        this.game.setFreeze(this.b, this.i, this.c);        
      }
          
          
    }//GEN-LAST:event_jButton2MouseClicked
	
	/**
	 *Initialization of board
	 * Background and boarders are loaded, size of board is defined
	 */
	private void initializeBoard(){
		this.loadFiles();
		
		jPanel1.updateUI();
		jPanel1.removeAll();
		jPanel1.revalidate();
		jPanel1.repaint();
		
		if(jRadioButton1.isSelected()){
			this.size = 6;
			this.panelHolder = new JLayeredPane[this.size+2][this.size+2];
			this.rules = new ReversiRules(this.size);
			this.board = new Board(this.rules);
			
			for(int i=0;i<this.size+2;i++){
				for(int j=0; j<this.size+2;j++){
					setJPanel(i,j);
				
					if (i == 0 || j == 0 || i == this.size + 1 || j == this.size + 1){
						insertIcon(this.Border,i,j,1);
						jPanel1.add(this.panelHolder[i][j]);
					}
					else{
						
						insertIcon(this.Background,i,j,1);
						jPanel1.add(this.panelHolder[i][j]);
					}
				
				}
			}
			
			jPanel1.revalidate();
			jPanel1.repaint();
		}
		
		else if(jRadioButton2.isSelected()){
			this.size = 8;
			this.panelHolder = new JLayeredPane[this.size+2][this.size+2];
			this.rules = new ReversiRules(this.size);
			this.board = new Board(this.rules);
			
			for(int i=0;i<this.size+2;i++){
				for(int j=0; j<this.size+2;j++){
					setJPanel(i,j);
				
					if (i == 0 || j == 0 || i == this.size + 1 || j == this.size + 1){
						insertIcon(this.Border,i,j,1);
						jPanel1.add(this.panelHolder[i][j]);
					}
					else{
						
						insertIcon(this.Background,i,j,1);
						jPanel1.add(this.panelHolder[i][j]);
					}
				
				}
			}
			
			jPanel1.revalidate();
			jPanel1.repaint();
		}
		
		else if(jRadioButton3.isSelected()){
			this.size = 10;
			this.panelHolder = new JLayeredPane[this.size+2][this.size+2];
			this.rules = new ReversiRules(this.size);
			this.board = new Board(this.rules);
			
			for(int i=0;i<this.size+2;i++){
				for(int j=0; j<this.size+2;j++){
					setJPanel(i,j);
				
					if (i == 0 || j == 0 || i == this.size + 1 || j == this.size + 1){
						insertIcon(this.Border,i,j,1);
						jPanel1.add(this.panelHolder[i][j]);
					}
					else{
						
						insertIcon(this.Background,i,j,1);
						jPanel1.add(this.panelHolder[i][j]);
					}
				
				}
			}
			
			jPanel1.revalidate();
			jPanel1.repaint();
		}
		
		else if(jRadioButton4.isSelected()){
			this.size = 12;
			this.panelHolder = new JLayeredPane[this.size+2][this.size+2];
			this.rules = new ReversiRules(this.size);
			this.board = new Board(this.rules);
			
			for(int i=0;i<this.size+2;i++){
				for(int j=0; j<this.size+2;j++){
					setJPanel(i,j);
				
					if (i == 0 || j == 0 || i == this.size + 1 || j == this.size + 1){
						insertIcon(this.Border,i,j,1);
						jPanel1.add(this.panelHolder[i][j]);
					}
					else{
						
						insertIcon(this.Background,i,j,1);
						jPanel1.add(this.panelHolder[i][j]);
					}
				
				}
			}
			
			jPanel1.revalidate();
			jPanel1.repaint();
		}
		
		
	}
	
	/**
	* First set of panel parts 
	*/
	private void setJPanel(int i, int j){
		this.panelHolder[i][j] = new JLayeredPane();
		this.panelHolder[i][j].setVisible(true);
		this.panelHolder[i][j].setBounds(i*40,j*40,40,40);
		this.panelHolder[i][j].revalidate();
		this.panelHolder[i][j].repaint();
		jPanel1.setPreferredSize(new java.awt.Dimension((this.size+2)*40,(this.size+2)*40));
	}
	
	/**
	 *Insert image to panel holder
	 */	
	private void insertIcon(BufferedImage Icon, int i, int j, int level) {
		JLabel image = new JLabel(new ImageIcon(Icon));
		image.setBounds(0,0,40,40);
		this.panelHolder[i][j].add(image, level);	
	}
	
	/**
	 * Loading file for GUI
	 */
	private void loadFiles(){
		
		try {	
			
			this.image = new File("../lib/reversi/background.png");
			this.Background = ImageIO.read(this.image);
					
			this.image = new File("../lib/reversi/border.png");
			this.Border = ImageIO.read(this.image);
			
			this.image = new File("../lib/reversi/smileyw.png");
			this.SmileyW = ImageIO.read(this.image);
			
			this.image = new File("../lib/reversi/smileyb.png");
			this.SmileyB = ImageIO.read(this.image);
			
			this.image = new File("../lib/reversi/stonew.png");
			this.StoneW = ImageIO.read(this.image);
			
			this.image = new File("../lib/reversi/stoneb.png");
			this.StoneB = ImageIO.read(this.image);
			
			this.image = new File("../lib/reversi/smallstonew.png");
			this.SmallStoneW = ImageIO.read(this.image);
			
			this.image = new File("../lib/reversi/smallstoneb.png");
			this.SmallStoneB = ImageIO.read(this.image);
			
			this.image = new File("../lib/reversi/highlight.png");
			this.Highlight = ImageIO.read(this.image);
			
			this.image = new File("../lib/reversi/logo.png");
			this.Logo = ImageIO.read(this.image);
			
			this.image = new File("../lib/reversi/titleboard.jpg");
			this.TitleBoard = ImageIO.read(this.image);
			
			this.image = new File("../lib/reversi/freeze.png");
			this.Frozen = ImageIO.read(this.image);
			
		} catch (IOException ex) {
			Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
		}
			
		
		
		
		
	}
	
	/**
	 * Getting position after used click to panel
	 * @param X coordinate
	 * @param Y coordinate
	 */
	public void getPosition(int X, int Y){
		if(X>=0 && X<40) this.positionX=0;
		else if(X>=40 && X<80) this.positionX=1;	
		else if(X>=80 && X<120) this.positionX=2;
		else if(X>=120 && X<160) this.positionX=3;
		else if(X>=160 && X<200) this.positionX=4;
		else if(X>=200 && X<240) this.positionX=5;
		else if(X>=240 && X<280) this.positionX=6;
		else if(X>=280 && X<320) this.positionX=7;
		else if(X>=320 && X<360) this.positionX=8;
		else if(X>=360 && X<400) this.positionX=9;
		else if(X>=400 && X<440) this.positionX=10;
		else if(X>=440 && X<480) this.positionX=11;
		else if(X>=480 && X<520) this.positionX=12;
		else if(X>=520 && X<560) this.positionX=13;
		
		if(Y>=0 && Y<40) this.positionY=0;
		else if(Y>=40 && Y<80) this.positionY=1;
		else if(Y>=80 && Y<120) this.positionY=2;
		else if(Y>=120 && Y<160) this.positionY=3;
		else if(Y>=160 && Y<200) this.positionY=4;
		else if(Y>=200 && Y<240) this.positionY=5;
		else if(Y>=240 && Y<280) this.positionY=6;
		else if(Y>=280 && Y<320) this.positionY=7;
		else if(Y>=320 && Y<360) this.positionY=8;
		else if(Y>=360 && Y<400) this.positionY=9;
		else if(Y>=400 && Y<440) this.positionY=10;
		else if(Y>=440 && Y<480) this.positionY=11;
		else if(Y>=480 && Y<520) this.positionY=12;
		else if(Y>=520 && Y<560) this.positionY=13;
			
		this.positionX ^= this.positionY;
        this.positionY ^= this.positionX;
		this.positionX ^= this.positionY;
	
	}
	
	
	/**
	 * After click to text field with Player Name.. the text is removed
	 */
    private void jTextField2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField2MouseClicked
        jTextField2.setText("");
    }//GEN-LAST:event_jTextField2MouseClicked

	/**
	 * Add Player clicked
	 * Player is set and information are inserted to JFrame
	 * If something is wrong the warning is printed
	 */
    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
		 String PlayerName = jTextField2.getText();
		
		if(PlayerName.equals("Player Name..") || PlayerName.equals("")){
			jLabel3.setText("Name is incorrect!");
			return;
		}
		else{
			if(this.countPlayers == 0){ 
				this.countPlayers += 1;
				this.player1 = new Player(true,PlayerName);
				
				jLabel10.setText(String.valueOf(PlayerName));
				jLabel11.setText("2");
				jLabel3.setText("Player added 1!");
				
				this.image = new File("../lib/reversi/smallstonew.png");
				try {
					this.SmallStoneW = ImageIO.read(this.image);
				} catch (IOException ex) {
					Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
				}
				JLabel imageH = new JLabel(new ImageIcon(this.SmallStoneW));
				imageH.setBounds(0,0,30,30);
				jLabel8.setText("");
				jLabel8.add(imageH);
				jLabel8.repaint();
				jLabel8.revalidate();
				
			}
			else if(this.countPlayers == 1){
					
				if(jRadioButton5.isSelected()){
					jLabel3.setText("Do not add more players!");
				}
				else {
				this.countPlayers += 1;
				this.player2 = new Player(false,PlayerName);

				jLabel12.setText(String.valueOf(PlayerName));
				jLabel13.setText("2");
				jLabel3.setText("Player added 2!");
				
				this.image = new File("../lib/reversi/smallstoneb.png");
				try {
					this.SmallStoneB = ImageIO.read(this.image);
				} catch (IOException ex) {
					Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
				}
				JLabel imageH = new JLabel(new ImageIcon(this.SmallStoneB));
				imageH.setBounds(0,0,30,30);
				jLabel9.setText("");
				jLabel9.add(imageH);
				jLabel9.repaint();
				jLabel9.revalidate();
				
				}
			}
			else{
				jLabel3.setText("Do not add more players!");
				return;
			}
		}
		
		jTextField2.setText("Player Name..");
    }//GEN-LAST:event_jButton3MouseClicked

	/*
	*Loading of logo Reversi
	*/
    private void jPanel3PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jPanel3PropertyChange
        this.image = new File("../lib/reversi/logo.png");
		try {
			this.Logo = ImageIO.read(this.image);
		} catch (IOException ex) {
			Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
		}
		
		JLabel imageH = new JLabel(new ImageIcon(this.Logo));
	    imageH.setBounds(0,0,300,50);
		jPanel3.add(imageH);
		jPanel3.repaint();
		jPanel3.revalidate();
    }//GEN-LAST:event_jPanel3PropertyChange
	
	/**
	*Clicked into panel. Coordinates are defined and move is done
	*/
    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        getPosition(evt.getX(), evt.getY());
		playGame();
    }//GEN-LAST:event_jPanel1MouseClicked
	
	/**
	*Loading cover to board at the begging of the game
	*/
    private void jPanel2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jPanel2PropertyChange
       this.image = new File("../lib/reversi/titleboard.jpg");
		try {
			this.TitleBoard = ImageIO.read(this.image);
		} catch (IOException ex) {
			Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
		}
		
		JLabel imageH = new JLabel(new ImageIcon(this.TitleBoard));
	    imageH.setBounds(0,0,560,560);
		jPanel2.add(imageH);
		jPanel2.repaint();
		jPanel2.revalidate();
    }//GEN-LAST:event_jPanel2PropertyChange

	/**
	* Clicked to LOAD GAME
	* The dialog for selecting of loading file is opened
	*/
    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
		File folder = new File("../examples/saves/");
		File[] listOfFiles = folder.listFiles();
		String allFiles = null;
		DefaultListModel listModel = new DefaultListModel();        
		
		for (int i = 0; i < listOfFiles.length; i++) {
			if (listOfFiles[i].isFile())
              listModel.addElement(listOfFiles[i].getName().toString() );
			 
		}
		jTextField4.setText("Name of file..");
		jList1.setModel(listModel);
		jDialog4.setVisible(true);
		this.saveLoad = 1;
		
    }//GEN-LAST:event_jButton6MouseClicked
	
	/**
	*Loading of board after selection of LOAD or UNDO
	*/
	private void loadBoard(Game gameH){
		this.size = gameH.getBoard().getSize();
		this.countPlayers = 2;
		this.loadFiles();
		
		jPanel1.updateUI();
		jPanel1.removeAll();
		this.panelHolder = new JLayeredPane[this.size+2][this.size+2];
		for(int i=0;i<this.size+2;i++){
			for(int j=0; j<this.size+2;j++){
				setJPanel(i,j);
			
				if (i == 0 || j == 0 || i == this.size + 1 || j == this.size + 1){
					insertIcon(this.Border,i,j,1);
					jPanel1.add(this.panelHolder[i][j]);
				}
				else{
		
					insertIcon(this.Background,i,j,1);
					jPanel1.add(this.panelHolder[i][j]);
				}
				
			}
		}
			
		jPanel1.revalidate();
		jPanel1.repaint();
		
		for(int i=1;i<this.size+1;i++){
			for(int j=1; j<this.size+1;j++){
				
				Disk disk;		
				disk = gameH.getBoard().getRules().getField(i,j).getDisk();
				if( disk != null){
					Boolean color = disk.isWhite();
					
					if(color){
						insertIcon(this.StoneW, j, i, 0);
					}
					else{
					    insertIcon(this.StoneB, j, i, 0);
					}
					this.panelHolder[j][i].revalidate();
					this.panelHolder[j][i].repaint();
					jPanel1.add(this.panelHolder[j][i]);
					jPanel1.revalidate();
					jPanel1.repaint();
					
				}
				
				if( disk != null && gameH.getBoard().getRules().getField(i,j).checkIfFrozen()){
					this.panelHolder[j][i].removeAll();
					insertIcon(this.Background,j,i,1);
					insertIcon(this.Frozen, j, i, 0);
					this.panelHolder[j][i].revalidate();
					this.panelHolder[j][i].repaint();
					jPanel1.add(this.panelHolder[j][i]);
					jPanel1.revalidate();
					jPanel1.repaint();
				}
			}
		}
		
			if(this.permanentDefrost == false){
			
			for(int i=0;i<this.size+2;i++){
				for(int j=0; j<this.size+2;j++){
					Disk diskH = this.game.getBoard().getRules().getField(i,j).getDisk();
					Field fieldH = this.game.getBoard().getRules().getField(i,j);
					
					if( diskH != null && fieldH.checkIfFrozen()){
						this.panelHolder[j][i].removeAll();
						insertIcon(this.Background,j,i,1);
						insertIcon(this.Frozen, j, i, 0);
						this.panelHolder[j][i].revalidate();
						this.panelHolder[j][i].repaint();
						jPanel1.add(this.panelHolder[j][i]);
						jPanel1.revalidate();
						jPanel1.repaint();
					}
				}
			}
		}
		jPanel1.revalidate();
		jPanel1.repaint();
		
		this.player1 = this.game.getPlayer1();
		this.player2 = this.game.getPlayer2();
		this.actualPlayer = this.game.currentPlayer().isWhite();
		
		jLabel8.setVisible(true);
		jLabel9.setVisible(true);
		jLabel10.setVisible(true);
		jLabel11.setVisible(true);
		jLabel12.setVisible(true);
		jLabel13.setVisible(true);
		
		jLabel10.setText(String.valueOf(this.game.player1.getName()));
		jLabel12.setText(String.valueOf(this.game.player2.getName()));

		jLabel11.setText(String.valueOf(this.game.player1.getScore()));
		jLabel13.setText(String.valueOf(this.game.player2.getScore()));
		
		if(actualPlayer){
			jLabel6.removeAll();
			jLabel6.setText("");
			JLabel image2 = new JLabel(new ImageIcon(this.SmileyW));
			image2.setBounds(0,0,120,120);
			jLabel6.setVisible(true);
			jLabel6.add(image2);
			jLabel6.repaint();
			jLabel6.revalidate();
		}
		else{
			jLabel6.removeAll();
			jLabel6.setText("");
			JLabel image1 = new JLabel(new ImageIcon(this.SmileyB));
			image1.setBounds(0,0,120,120);
			jLabel6.setVisible(true);
			jLabel6.add(image1);
			jLabel6.repaint();
			jLabel6.revalidate();
		}
	}
	/**
	 * Clicked to OK in frame to SAVE FILE
	 * File is saved
	 */
    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
      String fileName = jTextField3.getText();
	  
	if(fileName.equals("Name of file..") || fileName.equals("")){
			jLabel5.setText("Name is incorrect!");
			return;
	}
	
	
	if (saveLoad == 2){
		try
        {           
            FileOutputStream saveFile = new FileOutputStream("../examples/saves/"+fileName);
			try (ObjectOutputStream save = new ObjectOutputStream(saveFile)) {
				save.writeObject(this.game);
				save.close();
				saveFile.close();
			}
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
		  
		jLabel5.setText("Game saved. You can continue!");
		jTextField3.setVisible(false);
		jButton7.setVisible(false);
		saveLoad = 0;
		
	}
	
    }//GEN-LAST:event_jButton7MouseClicked
	
	/*
	* Clicked to text field with Name of File.. in JFrame
	* Text is removed
	*/
    private void jTextField3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField3MouseClicked
        jTextField3.setText("");
    }//GEN-LAST:event_jTextField3MouseClicked
	
	/**
	* Clicked to SAVE GAME
	*/
    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        jLabel5.setText("Please add name off file and press OK!");
		jTextField3.setVisible(true);
		jButton7.setVisible(true);
		this.saveLoad = 2;
    }//GEN-LAST:event_jButton5MouseClicked
	
	/**
	 * Clicked to  END GAME
	 * Thread will be 
	 */
    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
     this.end = true;
    }//GEN-LAST:event_jButton4MouseClicked
	
	/*Clicked to NO at End Game*/
    private void jButton10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseClicked
       
    }//GEN-LAST:event_jButton10MouseClicked
	
	/*Clicked to YES at End Game*/
    private void jButton9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseClicked
      
    }//GEN-LAST:event_jButton9MouseClicked
	
	/**
	 * Clicked to button COMPUTER in dialog for select options of game
	 * Button with algoritms are shown
	 */
    private void jRadioButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton5MouseClicked
       jRadioButton7.setVisible(true);
	   jRadioButton8.setVisible(true);
    }//GEN-LAST:event_jRadioButton5MouseClicked
	
	/**
	 * Clicked to button PERSON in dialog for select options of game
	 * Button with algoritms are hidden
	 */
    private void jRadioButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton6MouseClicked
       jRadioButton7.setVisible(false);
	   jRadioButton8.setVisible(false);
    }//GEN-LAST:event_jRadioButton6MouseClicked
	
	/**
	 * Clicked to UNDO
	 * Make step back if player already put stone on the board
	 */
    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseClicked
    	if(!stonePlaced){
			jLabel5.setText("You didnt place stone. Cant do UNDO");
			return;
		}
		this.undoDone = true;
		this.stonePlaced = false;
		try {
            FileInputStream loadFile = new FileInputStream("../examples/saves/undo/undo"+this.ID);
			
			
			
			  try (ObjectInputStream load = new ObjectInputStream(loadFile)) {
				this.game = (Game)load.readObject();
			  } 
        } catch (Exception exc) {
            exc.printStackTrace();
        }
		
		 jPanel1.removeAll();
		 jPanel1.repaint();
		 jPanel1.revalidate();
		loadBoard(this.game);
		jButton8.setVisible(true);
		this.board = this.game.getBoard();
	 
	 
	 
    }//GEN-LAST:event_jButton8MouseClicked
	
	/**
	 * Clicked to DONE
	 * 
	 */
    private void jButton13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton13MouseClicked
       jButton13.setVisible(false);
       
        /* frozen */
                // if the freezing period is over - unfreeze the disks
                if (this.permanentDefrost == false && this.game.getDefrostTime()) {
                    this.game.unfreezeDisks();
					for(int i=0;i<this.size+2;i++){
						for(int j=0; j<this.size+2;j++){
							Disk diskH = this.game.getBoard().getRules().getField(i,j).getDisk();
							Field fieldH = this.game.getBoard().getRules().getField(i,j);
					
							if( diskH != null && fieldH.checkWasFrozen()){
								this.panelHolder[j][i].removeAll();
								insertIcon(this.Background,j,i,1);
								
								if(diskH.isWhite()){
									insertIcon(this.StoneW, j, i, 0);
								}
								else{
								  insertIcon(this.StoneB, j, i, 0);
								}
								
								this.panelHolder[j][i].revalidate();
								this.panelHolder[j][i].repaint();
								jPanel1.add(this.panelHolder[j][i]);
								jPanel1.revalidate();
								jPanel1.repaint();
					}
				}
			}
                    this.permanentDefrost = true;    // priste uz nebude kontrolovat 
                }
       
       
	   this.undoDone = false;
	   this.stonePlaced = false;
		this.game.nextPlayer();
		
		if(jRadioButton6.isSelected()){
		
		jLabel5.setText("It's your turn " + this.game.currentPlayer().getName() + "!");
			
			if(this.game.currentPlayer().isWhite()){
				jLabel6.removeAll();
				jLabel6.setText("");
				JLabel image2 = new JLabel(new ImageIcon(this.SmileyW));
				image2.setBounds(0,0,120,120);
				jLabel6.setVisible(true);
				jLabel6.add(image2);
				jLabel6.repaint();
				jLabel6.revalidate();
			}
			else{
				jLabel6.removeAll();
				jLabel6.setText("");
				JLabel image1 = new JLabel(new ImageIcon(this.SmileyB));
				image1.setBounds(0,0,120,120);
				jLabel6.setVisible(true);
				jLabel6.add(image1);
				jLabel6.repaint();
				jLabel6.revalidate();
			}
		}
            
        /* AI */
        if (jRadioButton5.isSelected()) {
               
            /* ALG1 */
            if (jRadioButton7.isSelected()) {
                if (AIalg1() == false) {
                        printWinner();
                        return;
                }
            }
            
            /* ALG2 */
            else if (jRadioButton8.isSelected()) {
                if (AIalg2() == false) {
                        printWinner();
                        return;
                }
            }
		
            this.player1.setScore(this.player2.getTurnedCount()); 
                
            game.nextPlayer();
            jLabel5.setText("It's your turn " + this.game.currentPlayer().getName() + "!");
                
        }
		
		
			
		jLabel11.setText(String.valueOf(player1.getScore()));
		jLabel13.setText(String.valueOf(player2.getScore()));
        
        // test if it is possible to put more disks, if not, end the game
       if (possPutDisk() == false) {
                printWinner();
                return;
        }
    }//GEN-LAST:event_jButton13MouseClicked
	/**
	 * Clicked to LOAD
	 * File is loaded
	 */
    private void jButton14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton14MouseClicked
       String fileName = jTextField4.getText();
	  
		if(fileName.equals("Name of file..") || fileName.equals("")){
			jLabel16.setText("Name is incorrect!");
			return;
		}
		
		if(saveLoad==1){
		try {
            FileInputStream loadFile = new FileInputStream("../examples/saves/"+fileName);
			  try (ObjectInputStream load = new ObjectInputStream(loadFile)) {
				this.game = (Game)load.readObject();
			  } 
        } catch (Exception exc) {
            exc.printStackTrace();
        }
		
		if(this.countPlayers==0){
			loadBoard(this.game);
			jButton8.setVisible(true);
			this.board = this.game.getBoard();
			jLabel5.setText("Game load. You can play "+ this.game.currentPlayer().getName() + "!");
			jTextField3.setVisible(false);
			jButton7.setVisible(false);
		}
		else{
			 Reversi R = new Reversi(game);
             Thread t = new Thread(R);
             t.start();    
		}
		
		jDialog4.setVisible(false);
		
		
		saveLoad = 0;
	}
    }//GEN-LAST:event_jButton14MouseClicked

    private void jTextField4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField4MouseClicked
       jTextField4.setText("");
    }//GEN-LAST:event_jTextField4MouseClicked

    private void jToggleButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton1MouseClicked
        jDialog5.setVisible(true);
    }//GEN-LAST:event_jToggleButton1MouseClicked

	/**
	 * Clicked to OK after clicked to FREEZE BUTTONS
	 */
    private void jButton15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton15MouseClicked
       String B = jTextField5.getText();
	   String I = jTextField6.getText();
	   String C = jTextField7.getText();
		
		if(B.equals("Interval B..") ||B.equals("")){
			jLabel18.setText("Interval B is not correct!");
			jTextField5.setText("Interval B..");
			jTextField6.setText("Interval I..");
			jTextField7.setText("Count of stones..");
			return;
		}
		
		if(I.equals("Interval I..") ||C.equals(""))
		{
			jLabel18.setText("Interval C is not correct!");
			jTextField5.setText("Interval B..");
			jTextField6.setText("Interval I..");
			jTextField7.setText("Count of stones..");
			return;
		}
		
		if(C.equals("Count of stones..") ||C.equals(""))
		{
			jLabel18.setText("Count of stones is not correct!");
			jTextField5.setText("Interval B..");
			jTextField6.setText("Interval I..");
			jTextField7.setText("Count of stones..");
			return;
		}
		
		this.b = Integer.parseInt(B);
		this.i = Integer.parseInt(I);
		this.c = Integer.parseInt(C);
		
		jTextField5.setText("Interval B..");
		jTextField6.setText("Interval I..");
		jTextField7.setText("Count of stones..");
		jLabel18.setText("Please add intervals and count of stones. Press OK!");
		
		
		jDialog5.setVisible(false);
		
		
    }//GEN-LAST:event_jButton15MouseClicked
	/*
	* Clicked to text field with Interval B..
	*/
    private void jTextField5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField5MouseClicked
        jTextField5.setText("");
    }//GEN-LAST:event_jTextField5MouseClicked
	
	/*
	* Clicked to text field with Interval I..
	*/
    private void jTextField6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField6MouseClicked
         jTextField6.setText("");
    }//GEN-LAST:event_jTextField6MouseClicked
	
	/*
	* Clicked to text field with Interval C..
	*/
    private void jTextField7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField7MouseClicked
         jTextField7.setText("");
    }//GEN-LAST:event_jTextField7MouseClicked

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

				
	}
	
        /*
        * Represents one move of the player
        * If AI is set, AI move is executed, too
        * Places a disk on the board and turns the affected rows
        */
	public void playGame() {
            
        /* if invalid position -> return */
        // current field to place the disk on      
        if(this.stonePlaced){
			 jLabel5.setText("You already placed button. Press done!");
			 return;
		}
		
		if(this.permanentDefrost == false){
			
			for(int i=0;i<this.size+2;i++){
				for(int j=0; j<this.size+2;j++){
					Disk diskH = this.game.getBoard().getRules().getField(i,j).getDisk();
					Field fieldH = this.game.getBoard().getRules().getField(i,j);
					
					if( diskH != null && fieldH.checkIfFrozen()){
						this.panelHolder[j][i].removeAll();
						insertIcon(this.Background,j,i,1);
						insertIcon(this.Frozen, j, i, 0);
						this.panelHolder[j][i].revalidate();
						this.panelHolder[j][i].repaint();
						jPanel1.add(this.panelHolder[j][i]);
						jPanel1.revalidate();
						jPanel1.repaint();
					}
				}
			}
		}
        
        Field currField = game.getBoard().getField(this.positionX, this.positionY);           
                 
            
        /* catch the tricky positions that took 42 minutes of MY life */
        if (this.positionX > this.size || this.positionY > this.size ||
			this.positionX < 1 || this.positionY < 1) {
            jLabel5.setText("Invalid position, try again!");
            return;
            }
            
        try
        {           
            FileOutputStream saveFile = new FileOutputStream("../examples/saves/undo/undo"+this.ID);
			
			try (ObjectOutputStream save = new ObjectOutputStream(saveFile)) {
				save.writeObject(this.game);
				save.close();
				saveFile.close();
			}
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
		
            /* valid postition -> puts the disk */      
        if (game.currentPlayer().putDisk(currField) == false) {
            jLabel5.setText("Invalid position, try again!");
            return;
         }
            
            /* drawing an image of the disk and turning the affected rows */
        drawCurrDisk(this.positionY, this.positionX);   // vice-versa coords are ok here
        turnAroundRows();    // turn around the affected rows
		jLabel5.setText("Please press DONE if you finished!");
		this.stonePlaced = true;
		
		if(this.game.currentPlayer().isWhite()){
			
				this.player2.setScore(this.player1.getTurnedCount()); 
			
		}
		else{
			
				this.player1.setScore(this.player2.getTurnedCount()); 
			
		}
		
		
		//jLabel5.setText("If you are finished press DONE!");
		jButton13.setVisible(true);
                   
    }
	  
        /*
        * AI alogithm one
        * Simple for cycle iterating through the board
        * @return success of the action
        */
	public Boolean AIalg1() {
            
            Field currAiField;
            
            for (int i = 1; i < this.size+1; i++) {
                for (int j = 1; j < this.size+1; j++) {
            
                    currAiField = game.getBoard().getField(i, j);
                    if (game.currentPlayer().putDisk(currAiField) == true) {
                        drawCurrDisk(j, i);
                        turnAroundRows();
                        return true;
                    
                    }
                }
            }  
            return false;
        }
        
        /*
        * AI Algorith two
        * Another for cycle iteration - simplicity for demonstration purposes
        * @return success of the action
        */
        public Boolean AIalg2() {
            
            Field currAiField;
            
            for (int i = this.size; i > 0; i--) {
                for (int j = this.size; j > 0; j--) {
            
                    currAiField = game.getBoard().getField(j, i);
                    if (game.currentPlayer().putDisk(currAiField) == true) {
                        drawCurrDisk(i, j);
                        turnAroundRows();
                        return true;   
                    }
                }
            }
            return false;
        }
        
	  
        /* 
         * Print winner when there are no more moves available
        */
        public void printWinner() {
            
            if (player1.getScore() > player2.getScore())
                jLabel5.setText("Player 1 won!");
            else if (player1.getScore() < player2.getScore())
                jLabel5.setText("Player 2 won!");
            else
                jLabel5.setText("It's a draw!");
            
        }
        
        /*
        * Draws disk on the board
        */
	public void drawCurrDisk(int X, int Y) {
            
        if (game.currentPlayer() == player1) {
            insertIcon(this.StoneW, X, Y, 0);
        }
        else {
            insertIcon(this.StoneB, X, Y, 0);
        }
        
        insertIcon(this.Background, X, Y, 1);
        jPanel1.add(this.panelHolder[X][Y]);
        this.panelHolder[X][Y].revalidate();
        this.panelHolder[X][Y].repaint();
        
        jPanel1.add(this.panelHolder[X][Y]);
        this.panelHolder[X][Y].revalidate();
        this.panelHolder[X][Y].repaint();
            
        jPanel1.revalidate();
        jPanel1.repaint();
            
    }
	
        /*
        * Turns around the affected rows
        */
	public void turnAroundRows() {
            
        List<Field> fieldStack = game.currentPlayer().getFieldStack();
            for (Field fld : fieldStack) {
      
                // set X and Y coordinate of the disk to be flipped
		if (setDiskPosition(fld.getDisk()) == false) continue;
                if (fld.checkIfFrozen()) {
                    System.out.println("Neotocim sutr - Frame!");
                    continue;   // is frozen, we cannot use it
                } 
                
            drawCurrDisk(this.dRow, this.dCol);
            }
        }
	
        /*
        * Tests if it's possible to put a disk on the board
        */
	public Boolean possPutDisk() {
            
            Field currField;
            
           
            //Disk currDisk;
			
			/*for (int i = 1; i < this.size+1; i++) {
                for (int j = 1; j < this.size+1; j++) {
					  currField = this.game.getBoard().getField(i, j);
					  
					  if(currField.checkHigh()){
						this.panelHolder[j][i].removeAll();
						insertIcon(this.Background, j, i, 0);
						
						if(currField.getDisk() != null){
							if(currField.getDisk().isWhite()){
								insertIcon(this.StoneW, j, i, 1);
							}
							else{
								insertIcon(this.StoneB, j, i, 1);
							}
							
						}
						this.panelHolder[j][i].revalidate();
						this.panelHolder[j][i].repaint();
						jPanel1.add(this.panelHolder[j][i]);
				
						currField.unsetMyHigh();
					  }
				}
			}
			jPanel1.revalidate();
			jPanel1.repaint();*/
            
           		
		        
			
		           
            Boolean flg = false;
            /* draw new fields where it's possible to move */
            for (int i = 1; i < this.size+1; i++) {
                for (int j = 1; j < this.size+1; j++) {
            
                    currField = this.game.getBoard().getField(i, j);
					//currField.unsetMyHigh();
					if (this.game.currentPlayer().canPutDisk(currField) == true) {
						/*currField.setHigh();
						this.panelHolder[j][i].removeAll();
						insertIcon(this.Background, j , i ,1);
                        insertIcon(this.Highlight, j, i, 0);
                       
                        this.panelHolder[j][i].revalidate();
                        this.panelHolder[j][i].repaint();
						jPanel1.add(this.panelHolder[j][i]);
            
                        jPanel1.revalidate();
                        jPanel1.repaint();*/
                        
                        flg = true;
                    }
                }
            } 
			
			
            
            return flg; 
    }
	
        /*
        * Puts disk on the board
        */
	public Boolean setDiskPosition(Disk disk) {
            
        Disk tmpDisk;
            
            // 0 and this.size are borderfields - omit them
        for (int i = 0; i < this.size+1; i++) {
            for (int j = 0; j < this.size+1; j++) {
                
                tmpDisk = this.board.getField(i, j).getDisk();
                if (tmpDisk == null) {
                    continue;
                }

                // objects equal -> bingo
                if (tmpDisk == disk) {
                    //System.out.println("I,J: " + i + "  " + j);
                    this.dRow = j;
                    this.dCol = i;
                    return true;
                }
                    
            }
        }
          
            // nothing found
        this.dRow = 0;
        this.dCol = 0;
            
        return false;
    }
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog4;
    private javax.swing.JDialog jDialog5;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables

	private void interupted() {
		throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
	}

	/*@Override
	public void run() {
		initComponents();
	}*/
}
